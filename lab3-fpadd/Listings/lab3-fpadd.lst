


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 3 - Floating-Point Addition
    4 00000000         ;
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000         ;
   10 00000000         ; Test Data
   11 00000000         ;
   12 00000000 3FC00000 
                       FP_A    EQU              0x3fc00000  ;0x412c0000   ;0x41
                                                            C40000
   13 00000000 3FC00000 
                       FP_B    EQU              0x3fc00000  ;0x41960000
   14 00000000         
   15 00000000         
   16 00000000         ; initialize system stack pointer (SP)
   17 00000000 E59FD120        LDR              SP, =0x40010000
   18 00000004         
   19 00000004 E3A005FF        LDR              R0, =FP_A   ; test value A
   20 00000008 E3A015FF        LDR              R1, =FP_B   ; test value B
   21 0000000C         ;LDR R0, =FP_B
   22 0000000C         
   23 0000000C         
   24 0000000C         ;BL fpdecode
   25 0000000C         
   26 0000000C         ;BL fpencode
   27 0000000C         
   28 0000000C EB000027        BL               fpadd
   29 00000010         
   30 00000010 EAFFFFFE 
                       STOP    B                STOP
   31 00000014         
   32 00000014         
   33 00000014         ;
   34 00000014         ; fpdecode
   35 00000014         ; decodes an IEEE 754 floating point value to the signed
                        (2's complement)
   36 00000014         ; fraction and a signed 2's complement (unbiased) expone
                       nt
   37 00000014         ; parameters:
   38 00000014         ; R0 - IEEE 754 float
   39 00000014         ; return:
   40 00000014         ; R0 - fraction (signed 2's complement word)
   41 00000014         ; R1 - exponent (signed 2's complement word)
   42 00000014         ;
   43 00000014         fpdecode
   44 00000014         
   45 00000014 E92D47F0        PUSH             {R4-R10, LR}
   46 00000018         ; Sort the IEEE-457 into their components
   47 00000018         ; R4, Address of IEEE-457
   48 00000018         ; R5, S =0/1
   49 00000018         ; R6, E = 130
   50 00000018         ; R7, F = 0111 1111 1111 1111 1111 1111
   51 00000018         
   52 00000018 E3A08101        LDR              R8, =0x40000000
   53 0000001C E5880000        STR              R0, [R8]



ARM Macro Assembler    Page 2 


   54 00000020 E1A04000        MOV              R4, R0      ; Loads the IEEE-45
                                                            7 stored in R4
   55 00000024 E3A05201        MOV              R5, #0x10000000
   56 00000028 E3A06003        MOV              R6, #3
   57 0000002C E7D86006        LDRB             R6, [R8, R6]
   58 00000030 E0065005        AND              R5, R6, R5  ; Determines whethe
                                                            r s 0/1 in R5
   59 00000034         
   60 00000034 E3A06002        MOV              R6, #2
   61 00000038 E19860B6        LDRH             R6, [R8, R6]
   62 0000003C E59F70E8        LDR              R7, =0x7F80 ;0x0111 1111 1000 0
                                                            000   ,#0x7F80 
   63 00000040 E0066007        AND              R6, R6, R7
   64 00000044 E1A06086        MOV              R6, R6, LSL #1
   65 00000048 E1A06426        MOV              R6, R6, LSR #8 ; R6 Now contain
                                                            s the E before the 
                                                            127 minus, // Opera
                                                            tion shift two byte
                                                            s down, removing ex
                                                            tra zero's
   66 0000004C E3A0707F        MOV              R7, #127
   67 00000050 E0466007        SUB              R6, R6, R7  ; Finds the E (130 
                                                            - E Previous)
   68 00000054         
   69 00000054 E1A07000        MOV              R7, R0
   70 00000058 E1A07407        MOV              R7, R7, LSL #8
   71 0000005C E1A07427        MOV              R7, R7, LSR #8
   72 00000060 E3A0A000        MOV              R10, #0
   73 00000064         removeZero
   74 00000064 E3A08001        MOV              R8, #0x1
   75 00000068 E0079008        AND              R9, R7, R8
   76 0000006C E3590001        CMP              R9, #1
   77 00000070 0A000002        BEQ              finished
   78 00000074 E1A070A7        MOV              R7, R7, LSR #1
   79 00000078 E28AA001        ADD              R10, R10, #1
   80 0000007C EAFFFFF8        B                removeZero
   81 00000080         
   82 00000080         finished
   83 00000080 E1A07A17        MOV              R7, R7, LSL R10
   84 00000084 E1A00007        MOV              R0, R7
   85 00000088 E1A01006        MOV              R1, R6
   86 0000008C E8BD87F0        POP              {R4-R10, PC}
   87 00000090         
   88 00000090         ;
   89 00000090         ; fpencode
   90 00000090         ; encodes an IEEE 754 value using a specified fraction a
                       nd exponent
   91 00000090         ; parameters:
   92 00000090         ; R0 - fraction (signed 2's complement word)
   93 00000090         ; R1 - exponent (signed 2's complement word)
   94 00000090         ; result:
   95 00000090         ; R0 - IEEE 754 float
   96 00000090         ;
   97 00000090         fpencode
   98 00000090         ; Take the components and create the IEEE-457 
   99 00000090         ; R4, Address of IEEE-457
  100 00000090         ; R5, S =0/1
  101 00000090         ; R6, E = 130
  102 00000090         ; R7, F = 0111 1111 1111 1111 1111 1111



ARM Macro Assembler    Page 3 


  103 00000090 E92D4070        PUSH             {R4-R6, LR}
  104 00000094 E1A04000        MOV              R4, R0
  105 00000098 E1A05001        MOV              R5, R1
  106 0000009C E285507F        ADD              R5, R5, #127
  107 000000A0 E1A05B85        MOV              R5, R5, LSL #23
  108 000000A4 E1856004        ORR              R6, R5, R4
  109 000000A8 E1A00006        MOV              R0, R6
  110 000000AC E8BD8070        POP              {R4-R6,PC}
  111 000000B0         
  112 000000B0         
  113 000000B0         ;
  114 000000B0         ; fpadd
  115 000000B0         ; adds two IEEE 754 values
  116 000000B0         ; parameters:
  117 000000B0         ; R0 - IEEE 754 float A
  118 000000B0         ; R1 - IEEE 754 float B
  119 000000B0         ; return:
  120 000000B0         ; R0 - IEEE 754 float A+B
  121 000000B0         ;
  122 000000B0         fpadd
  123 000000B0         
  124 000000B0 E92D43F0        PUSH             {R4-R9, LR}
  125 000000B4         
  126 000000B4 E1A04001        MOV              R4, R1
  127 000000B8         
  128 000000B8 EBFFFFD5        BL               fpdecode
  129 000000BC E1A06000        MOV              R6, R0      ; fraction 1
  130 000000C0 E1A07001        MOV              R7, R1      ; exponent 1
  131 000000C4         
  132 000000C4 E1A00004        MOV              R0, R4
  133 000000C8 EBFFFFD1        BL               fpdecode
  134 000000CC E1A04000        MOV              R4, R0      ; fraction 2
  135 000000D0 E1A05001        MOV              R5, R1      ; exponent 2
  136 000000D4         
  137 000000D4 E1570005        CMP              R7, R5      ; R0 must be greate
                                                            r
  138 000000D8 AA000007        BGE              SKIPSWAP    ; if not, swap them
                                                            
  139 000000DC         
  140 000000DC E1A02007        MOV              R2, R7
  141 000000E0 E1A03005        MOV              R3, R5
  142 000000E4 E1A07003        MOV              R7, R3
  143 000000E8 E1A05002        MOV              R5, R2
  144 000000EC         
  145 000000EC E1A02006        MOV              R2, R6
  146 000000F0 E1A03004        MOV              R3, R4
  147 000000F4 E1A06003        MOV              R6, R3
  148 000000F8 E1A04002        MOV              R4, R2
  149 000000FC         
  150 000000FC         SKIPSWAP
  151 000000FC         
  152 000000FC         
  153 000000FC         
  154 000000FC         LOOP0
  155 000000FC E1570005        CMP              R7, R5
  156 00000100 0A000002        BEQ              END0
  157 00000104 E1A040A4        MOV              R4, R4, LSR#1
  158 00000108 E2855001        ADD              R5, R5, #1
  159 0000010C EAFFFFFA        B                LOOP0



ARM Macro Assembler    Page 4 


  160 00000110         
  161 00000110         END0
  162 00000110         
  163 00000110 E2866502        ADD              R6, #0x800000
  164 00000114 E2844502        ADD              R4, #0x800000
  165 00000118         
  166 00000118 E0860004        ADD              R0, R6, R4  ; fraction
  167 0000011C E1A01005        MOV              R1, R5      ; exponent
  168 00000120         
  169 00000120         ;LDR R8, =0x400000 ; 10000000000000000000000
  170 00000120         ;LDR R9, =0x3FFFFF ; 01111111111111111111111 mask for cl
                       earing bits
  171 00000120         ;BIC R9, R0, R9 
  172 00000120         
  173 00000120         ;CMP R8, R9
  174 00000120         ;BEQ ROUND
  175 00000120         
  176 00000120         
  177 00000120         
  178 00000120         ;ROUND
  179 00000120         
  180 00000120 EBFFFFDA        BL               fpencode
  181 00000124         
  182 00000124 E8BD83F0        POP              {R4-R9,PC}
  183 00000128         
  184 00000128         ;
  185 00000128         ; your add subroutine goes here
  186 00000128         ;
  187 00000128         
  188 00000128                 END
              40010000 
              00007F80 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab3-fpadd.d -o.\objects\lab3-fpadd.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Kei
l_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 516" --list=.\listings\lab3-fpadd.lst lab3
-fpadd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

END0 00000110

Symbol: END0
   Definitions
      At line 161 in file lab3-fpadd.s
   Uses
      At line 156 in file lab3-fpadd.s
Comment: END0 used once
LOOP0 000000FC

Symbol: LOOP0
   Definitions
      At line 154 in file lab3-fpadd.s
   Uses
      At line 159 in file lab3-fpadd.s
Comment: LOOP0 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file lab3-fpadd.s
   Uses
      None
Comment: RESET unused
SKIPSWAP 000000FC

Symbol: SKIPSWAP
   Definitions
      At line 150 in file lab3-fpadd.s
   Uses
      At line 138 in file lab3-fpadd.s
Comment: SKIPSWAP used once
STOP 00000010

Symbol: STOP
   Definitions
      At line 30 in file lab3-fpadd.s
   Uses
      At line 30 in file lab3-fpadd.s
Comment: STOP used once
finished 00000080

Symbol: finished
   Definitions
      At line 82 in file lab3-fpadd.s
   Uses
      At line 77 in file lab3-fpadd.s
Comment: finished used once
fpadd 000000B0

Symbol: fpadd
   Definitions
      At line 122 in file lab3-fpadd.s
   Uses
      At line 28 in file lab3-fpadd.s
Comment: fpadd used once
fpdecode 00000014

Symbol: fpdecode



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 43 in file lab3-fpadd.s
   Uses
      At line 128 in file lab3-fpadd.s
      At line 133 in file lab3-fpadd.s

fpencode 00000090

Symbol: fpencode
   Definitions
      At line 97 in file lab3-fpadd.s
   Uses
      At line 180 in file lab3-fpadd.s
Comment: fpencode used once
removeZero 00000064

Symbol: removeZero
   Definitions
      At line 73 in file lab3-fpadd.s
   Uses
      At line 80 in file lab3-fpadd.s
Comment: removeZero used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FP_A 3FC00000

Symbol: FP_A
   Definitions
      At line 12 in file lab3-fpadd.s
   Uses
      At line 19 in file lab3-fpadd.s
Comment: FP_A used once
FP_B 3FC00000

Symbol: FP_B
   Definitions
      At line 13 in file lab3-fpadd.s
   Uses
      At line 20 in file lab3-fpadd.s
Comment: FP_B used once
2 symbols
346 symbols in table
